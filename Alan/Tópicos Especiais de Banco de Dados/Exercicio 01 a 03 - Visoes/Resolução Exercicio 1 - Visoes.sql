-- EXERCICIO QUESTÃO 1

/*
Criar uma Visão VW_FUNCIONARIO a ser utilizada por outra aplicação ou
usuário. A visão deve apresentar todas as informações da tabela
TB_FUNCIONARIO exceto o Salário. 
*/
DROP VIEW VW_FUNCIONARIO
CREATE VIEW VW_FUNCIONARIO AS 
SELECT F.MATRICULA, F.CD_SETOR, F.NM_FUNCIONARIO, F.SEXO FROM TB_FUNCIONARIO F;

/*
Criar uma Visão VW_FUNCIONARIO_COMPLETO que apresente os seguintes
atributos: MATRICULA, NOME, SEXO, SALARIO, CD_SETOR, NM_SETOR,
CD_DEPARTAMENTO, NM_DEPARTAMENTO.
*/

CREATE VIEW VW_FUNCIONARIO_COMPLETO AS
SELECT 
	F.MATRICULA, 
	F.NM_FUNCIONARIO, 
	F.SEXO, 
	F.SALARIO, 
	S.CD_SETOR, 
	S.NM_SETOR,
	D.CD_DEPARTAMENTO, 
	D.NM_DEPARTAMENTO
FROM TB_FUNCIONARIO F
INNER JOIN TB_SETOR S ON (S.CD_SETOR = F.CD_SETOR)
INNER JOIN TB_DEPARTAMENTO D ON (S.CD_DEPARTAMENTO = D.CD_DEPARTAMENTO);

/*
Criar uma Visão VW_SETOR com os seguintes atributos: CD_SETOR,
NM_SETOR, NM_GERENTE, NM_DEPARTAMENTO. A visão deve apresentar
somente os Setores que possuem funcionários alocados.
*/

CREATE VIEW VW_SETOR AS 
SELECT S.CD_SETOR,S.NM_SETOR,S.NM_GERENTE,D.NM_DEPARTAMENTO FROM TB_SETOR S
INNER JOIN TB_DEPARTAMENTO D ON (S.CD_DEPARTAMENTO = D.CD_DEPARTAMENTO)
WHERE EXISTS (SELECT * FROM TB_FUNCIONARIO WHERE (S.CD_SETOR = CD_SETOR))


/*
Criar uma Visão VW_TOTAL_SOLICITACAO_DEPARTAMENTO que
apresente o total de solicitações por Departamento.
*/

CREATE VIEW VW_TOTAL_SOLICIATAO AS
SELECT COUNT(S.CD_SOLICITACAO) AS TOTAL, D.NM_DEPARTAMENTO FROM TB_SOLICITACAO S 
INNER JOIN TB_FUNCIONARIO F ON (F.MATRICULA = S.MATRICULA)
INNER JOIN TB_SETOR ST ON (ST.CD_SETOR = F.CD_SETOR)
INNER JOIN TB_DEPARTAMENTO D ON (D.CD_DEPARTAMENTO = ST.CD_DEPARTAMENTO)
GROUP BY D.NM_DEPARTAMENTO 

/*Criar uma Visão VW_DEPARTAMENTOS_MAIORES_SOLICITACOES que
apresente os Departamentos que possuem o maior número de solicitações.*/

CREATE VIEW VW_DEPARTAMENTO_MAIORES_SOLICITACOES AS
SELECT TS.NM_DEPARTAMENTO AS DEPARTAMENTO, TS.TOTAL FROM VW_TOTAL_SOLICIATAO TS 
WHERE  TS.TOTAL  = (SELECT MAX(TOTAL) FROM VW_TOTAL_SOLICIATAO)

-- FIM DA PRIMEIRA QUESTÃO 


-- SEGUNDA QUESTÃO 

CREATE TABLE TB_LIVRO (
CD_LIVRO INT NOT NULL PRIMARY KEY,
NM_LIVRO VARCHAR(40) NOT NULL,
ISBN INT NOT NULL,
ANO INT NOT NULL,
DATA_CADASTRO DATETIME NOT NULL
)
INSERT INTO TB_LIVRO(CD_LIVRO, NM_LIVRO,ISBN,ANO,DATA_CADASTRO) 
VALUES
(1,'HOBBIT', 1234, '2000', GETDATE()),
(2,'SENHOR DOS ANEIS', 1235, '2001', GETDATE()),
(3,'GAME OF THRONES', 15634, '2012', GETDATE());
SELECT * FROM TB_LIVRO

/*
Criar uma visão VW_LIVRO para a tabela TB_LIVRO com os atributos
CD_LIVRO, NM_LIVRO, ISBN e ANO.

*/
DROP TABLE TB_LIVRO
CREATE VIEW VW_LIVRO  AS
SELECT L.CD_LIVRO, L.NM_LIVRO,L.ISBN,L.ANO FROM TB_LIVRO L 
/*
Tentar atualizar a tabela TB_LIVRO através da visão VW_LIVRO.
*/
SELECT * FROM VW_LIVRO
SELECT * FROM TB_LIVRO
INSERT INTO VW_LIVRO (CD_LIVRO,NM_LIVRO,ISBN,ANO, DATA_CADASTRO) VALUES(4,'TESTE', 123,2015,GETDATE())
UPDATE VW_LIVRO SET NM_LIVRO = 'LIVRO ATUALIZADO' WHERE CD_LIVRO = 1 
/*
É possível incluir uma linha através da visão VW_LIVRO ?
NÃO. PORQ UE A VISÃO QUE FOI CRIADA NÃO TEM TODOS OS CAMPOS TA TABELA.

*/

/*
O que poderia ser modificado na tabela TB_LIVRO para que essa atualização fosse
possível ?

OPÇÃO 1: QUE O CAMPO DATA_CADASTRO TIVESSE UM DEFAULT GETDATE() OND EINSERIA A DATA QUE ESTA SENDO INSERIDO A LINHA AUTOMATICAMENTE
OPÇÃO 2: COLOCAR NA VIEW O CAMPO DATA_CADASTRO E INSERIR POR LÁ.


*/

/*
O que acontece com a visão VW_LIVRO quando removemos a tabela TB_LIVRO
do banco de dados ?

COMO A VIEW USA OS COMANDO PARA QUE ELA FOI CRAIDA QUANDO VOCÊ EXECULTA QUALQUER COMANDO DE DML - lingugem de manipulação de dados. sendo assim esses comandos não vão ser execultados
por que não existe a tabela tb_livro, mas mesmo assim a view irá continuar lá.

*/