/*
Criar um procedimento SP_CLASSIFICA_CLIENTE para classificar um Cliente como
NORMAL ou VIP. O procedimento deve receber como parâmetros de entrada a quantidade
de contas que o Cliente possui e a soma dos saldos de suas contas. O procedimento deve
apresentar um parâmetro de saída informando se o Cliente é NORMAL ou VIP. O cliente
será classificado de acordo com a seguinte regra:
Se o Saldo Total >= 10.000
 O Cliente é VIP
Se o Saldo Total >= 5.000 e < 10.000 e o Cliente Possuir mais de 2 contas
 O Cliente é VIP
Caso Contrário o Cliente é Normal.
*/


-- INSERINDO DADOS NA TABELA DE CONTA E DE CLIENTE
INSERT INTO TB_CLIENTE (CD_CLIENTE,NM_CLIENTE,CPF) VALUES
(1, 'ALAN', 12345678),
(2, 'BRENDEL', 12345679),
(3, 'EDSON', 22345678),
(4, 'IURY', 02345678),
(5, 'LETICIA', 12345678),
(6, 'KELLY VIZINHA', 43345678),
(7, 'ALFREDO', 82345678),
(8, 'NERCIA', 87345678),
(9, 'EVERTON', 09345678),
(10, 'TONY', 12045678)

DELETE TB_CLIENTE

SELECT * FROM TB_CONTA
SELECT TOP 5 * FROM TB_CLIENTE


INSERT INTO TB_CONTA VALUES
(1,1,250),
(2,1,250),
(3,1,0),
(4,2,1000),
(5,3,900),
(6,3,10),
(7,4,900),
(8,5,900)


-- FIM DA INSERÇÃO DE DADOS


CREATE PROCEDURE SP_CLASSIFICA_CLIENTE 
(@QUANTIDADE_CONTA INT, @SALDO_TOTAL NUMERIC(10,2), @TIPO_CLIENTE VARCHAR(45) OUTPUT) AS
IF(@QUANTIDADE_CONTA > 2 AND ( @SALDO_TOTAL >= 5000 AND @SALDO_TOTAL <10000))
	BEGIN
		SET @TIPO_CLIENTE = 'VIP'
	END
ELSE 
	BEGIN
		IF(@SALDO_TOTAL >=10000)
			BEGIN
				SET @TIPO_CLIENTE = 'VIP'
			END
		ELSE
			BEGIN
				SET @TIPO_CLIENTE = 'NORMAL'
			END
	END

DECLARE @TIPO_CLIENTE VARCHAR(45)
EXEC SP_CLASSIFICA_CLIENTE 3,5200,@TIPO_CLIENTE OUTPUT
PRINT @TIPO_CLIENTE

/*
Criar um procedimento SP_ATUALIZA_TIPO_CLENTE utilizando cursores para varrer
a tabela TB_CLIENTE e, utilizando o procedimento desenvolvido da questão 1, atualizar
o atributo TIPO_CLIENTE na tabela TB_CLIENTE para NORMAL ou VIP de acordo
com as informações contidas na tabela TB_CONTA. 

*/

CREATE PROCEDURE SP_ATUALIZA_TIPO_CLIENTE AS
DECLARE @CD_CLIENTE INT 
DECLARE C_ATUALIZAR CURSOR FOR
SELECT CD_CLIENTE FROM TB_CLIENTE
	OPEN C_ATUALIZAR
		FETCH C_ATUALIZAR INTO @CD_CLIENTE
		WHILE(@@FETCH_STATUS = 0)
			BEGIN
	
				DECLARE  @TIPO_CLIENTE VARCHAR(45),@QUANTIDADE INT ,@TOTAL NUMERIC(10,2)
				SET @QUANTIDADE = (SELECT COUNT(*) FROM TB_CONTA WHERE CD_CLIENTE= @CD_CLIENTE)
				SET @TOTAL = (SELECT SUM(SALDO) FROM TB_CONTA WHERE CD_CLIENTE = @CD_CLIENTE)
				EXEC SP_CLASSIFICA_CLIENTE @QUANTIDADE,@TOTAL,@TIPO_CLIENTE OUTPUT
				UPDATE TB_CLIENTE SET TIPO_CLIENTE = @TIPO_CLIENTE WHERE CD_CLIENTE = @CD_CLIENTE

				FETCH C_ATUALIZAR INTO @CD_CLIENTE
			END
	CLOSE C_ATUALIZAR
DEALLOCATE C_ATUALIZAR


EXEC SP_ATUALIZA_TIPO_CLIENTE