/*
Criar uma tabela TB_FUNCIONARIO com os atributos: MATRICULA, NOME,
TELEFONE, ENDERECO, SALARIO, PENDENCIA. Somente os atributos
MATRICULA e NOME são obrigatórios.
*/


CREATE TABLE TB_FUNCIONARIO(
MATRICULA INT NOT NULL,
NOME VARCHAR(40) NOT NULL,
TELEFONE VARCHAR(10) NULL,
ENDERECO VARCHAR(50) NULL,
SALARIO NUMERIC(10,2) NULL,
PENDENCIA VARCHAR(40) NULL
)


ALTER TABLE TB_FUNCIONARIO ADD CONSTRAINT PK_TB_FUNCIONARIO PRIMARY KEY (MATRICULA)

select * from tb_funcionario
/*
Criar um procedimento armazenado que, utilizando um cursor, percorra a tabela
TB_FUNCIONARIO e atualize o campo de PENDENCIA.
O campo de PENDENCIA deverá conter:
a. O texto ‘SEM PENDÊNCIA’ quando todos os atributos de um funcionário
apresentarem valores.
b. Um texto ‘EXISTE PENDÊNCIA’ quando existirem atributos sem valores.

*/


DROP PROCEDURE SP_FUNCIONARIO_UPDATE

CREATE PROCEDURE SP_FUNCIONARIO_UPDATE AS
DECLARE @MATRICULA INT, @NOME VARCHAR(40),@TELEFONE VARCHAR(10),@ENDERECO VARCHAR(50),@SALARIO
NUMERIC(10,2)
 DECLARE C_FUNCIONARIO CURSOR FOR 
SELECT  MATRICULA, NOME, TELEFONE, ENDERECO, SALARIO FROM TB_FUNCIONARIO

OPEN C_FUNCIONARIO
FETCH C_FUNCIONARIO INTO @MATRICULA, @NOME,@TELEFONE,@ENDERECO,@SALARIO
WHILE(@@FETCH_STATUS =0)
	BEGIN
		IF((@ENDERECO IS NOT NULL) AND (@SALARIO IS NOT NULL) AND ((@TELEFONE IS NOT NULL)) )
			BEGIN
				UPDATE TB_FUNCIONARIO SET PENDENCIA = 'SEM PENDENCIA' WHERE MATRICULA = @MATRICULA
			END
		ELSE
			BEGIN 
				UPDATE TB_FUNCIONARIO SET PENDENCIA = 'COM PENDENCIA' WHERE MATRICULA = @MATRICULA
			END
		FETCH C_FUNCIONARIO INTO @MATRICULA, @NOME,@TELEFONE,@ENDERECO,@SALARIO
	END
CLOSE C_FUNCIONARIO
DEALLOCATE C_FUNCIONARIO
