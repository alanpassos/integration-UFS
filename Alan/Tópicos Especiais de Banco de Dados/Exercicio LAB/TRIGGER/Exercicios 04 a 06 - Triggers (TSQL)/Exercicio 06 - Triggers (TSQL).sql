--#####################################################################
-- ALAN DE JESUS PASSOS
-- TOPICOS ESPECIAIS DE BANCO DE DADOS
--#####################################################################
-----------------------------------------------------------------------
---- CRIACAO DA PRIMEIRA TRIGGER
-----------------------------------------------------------------------

ALTER TRIGGER TG_ATUALIZA_RESUMO ON TB_VENDAS 
AFTER INSERT, UPDATE
AS
	DELETE TB_RESUMO_VENDAS FROM TB_RESUMO_VENDAS R
	INNER JOIN INSERTED I 
	ON I.DT_VENDA = R.DT_VENDA AND 
		I.CD_PRODUTO = R.CD_PRODUTO
	-- MESMO QUE O CODIGO DO PRODUTO E A DATA SEJA DIFERENTE ELE VAI VARRER A TABELA TODA 
	-- NÃO DA PARA USAR INDICE FICA MAIS DEMORADA
	INSERT INTO TB_RESUMO_VENDAS 
		SELECT 
			V.CD_PRODUTO, 
			V.DT_VENDA,
			SUM(V.QUANTIDADE),
			SUM(V.VALOR) 
		FROM TB_VENDAS V
		WHERE EXISTS(SELECT I.CD_PRODUTO FROM inserted I WHERE I.CD_PRODUTO = V.CD_PRODUTO AND
												CONVERT(DATE, I.DT_VENDA) = CONVERT(DATE, V.DT_VENDA))	
		GROUP BY V.CD_PRODUTO,
				V.DT_VENDA
	

	-- DA APRA USAR INDICE POR QUE ELE ESTRA RESTRIGINDO APENAS PELO PRODUTO E DATA
	-- DA PARA USAR INDECE PARA DEIXAR MAIS RAPIDO
	/*		
	INSERT INTO TB_RESUMO_VENDAS 
		SELECT 
			V.CD_PRODUTO, 
			V.DT_VENDA ,
			SUM(V.QUANTIDADE),
			SUM(V.VALOR) 
		FROM TB_VENDAS V
		INNER JOIN 
		(SELECT DISTINCT CONVERT(DATE,DT_VENDA), CD_PRODUTO 
		FROM inserted) I 
		ON I.CD_PRODUTO = V.CD_PRODUTO AND 
			I.DT_VENDA = V.DT_VENDA
		GROUP BY CD_PRODUTO,
					CONVERT(DATE, DT_VENDA)
	*/
	
	
-------------------------------------------------------------------------------------
-- CRIAÇÃO DA TRIGGER 2 
-------------------------------------------------------------------------------------
SELECT CONVERT(VARCHAR(11),DT_VENDA,114) FROM TB_VENDAS 
SELECT DATEPART(HOUR,DT_VENDA) FROM TB_VENDAS


ALTER TRIGGER TG_LIMITAR_VENDA
ON TB_VENDAS
AFTER UPDATE
AS
	  DECLARE @HORA_ATUAL datetime,
			  @MENSAGEM_ERRO varchar(45)
	  SET @HORA_ATUAL = DATEPART(HOUR, (SELECT DT_VENDA FROM INSERTED))

	  IF (
		((@HORA_ATUAL >= 18)
		AND (@HORA_ATUAL < 22))
		OR ((@HORA_ATUAL >= 12)
		AND (@HORA_ATUAL < 14))
		)
	  BEGIN
		SET @MENSAGEM_ERRO = 'HORÁRIO INVAIDO PARA RELAIZAR ATUALIZAÇÃO';
		RAISERROR (@MENSAGEM_ERRO, 1, 1)
		ROLLBACK
	  END
-------------------------------------------------------------------------------------
-- CRIAÇÃO DA TRIGGER 3 
-------------------------------------------------------------------------------------
DROP TRIGGER TG_ATUALIZA_UPDATE_LOG
CREATE TRIGGER TG_ATUALIZA_UPDATE_LOG ON TB_VENDAS
AFTER UPDATE
AS
		
				INSERT INTO TB_LOG_VENDAS  
					SELECT 
						GETDATE(),
						'A',
						I.CD_VENDA,
						I.CD_PRODUTO,
						I.DT_VENDA,
						D.QUANTIDADE,
						D.VALOR,
						I.QUANTIDADE,
						I.VALOR 
					FROM inserted I,deleted D 

DROP TRIGGER TG_ATUALIZA_INSERT_LOG					
CREATE TRIGGER TG_ATUALIZA_INSERT_LOG ON TB_VENDAS
AFTER INSERT
AS

		
				INSERT INTO TB_LOG_VENDAS (DT_LOG,TIPO_OPERACAO,CD_VENDA,CD_PRODUTO,DT_VENDA,QUANTIDADE_NOVA,VALOR_NOVO) 
					SELECT 
						GETDATE(),
						'I',
						CD_VENDA,
						CD_PRODUTO,
						DT_VENDA,
						QUANTIDADE,
						VALOR 
					FROM inserted

DROP TRIGGER TG_ATUALIZA_DELETE_LOG					
CREATE TRIGGER TG_ATUALIZA_DELETE_LOG ON TB_VENDAS
AFTER DELETE
AS
			INSERT INTO TB_LOG_VENDAS (DT_LOG,TIPO_OPERACAO,CD_VENDA,CD_PRODUTO,DT_VENDA,QUANTIDADE_ANTIGA,VALOR_ANTIGO)
					SELECT 
						GETDATE(),
						'R',
						CD_VENDA, 
						CD_PRODUTO,
						DT_VENDA,
						QUANTIDADE,
						VALOR
					FROM deleted
									
-----------------------------------------------------------------------												
---- CRIACAO DOS TESTES
-----------------------------------------------------------------------

INSERT INTO TB_VENDAS VALUES
('2015-01-01',40,50,500),
('2015-01-02',40,10,50),
('2015-01-03',40,5,5),
('2015-01-01',50,50,50),
('2015-01-04',60,50,30)

INSERT INTO TB_VENDAS VALUES
('2015-01-04',60,1,5)

TRUNCATE TABLE TB_VENDAS
TRUNCATE TABLE TB_RESUMO_VENDAS
TRUNCATE TABLE TB_LOG_VENDAS
DELETE TB_VENDAS WHERE CD_PRODUTO = 40
UPDATE TB_VENDAS SET QUANTIDADE = 1231 WHERE CD_PRODUTO IN (50)
DELETE TB_VENDAS WHERE CD_VENDA = 1
SELECT * FROM TB_VENDAS
SELECT * FROM TB_RESUMO_VENDAS
SELECT * FROM TB_LOG_VENDAS
									