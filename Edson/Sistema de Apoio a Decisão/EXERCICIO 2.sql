CREATE PROCEDURE SP_DIM_TEMPO
(@DATA_INICIAL DATETIME, @DATAFINAL DATETIME) AS
BEGIN 
	DECLARE @DATE DATETIME, @DIA SMALLINT, @DIASEMANA VARCHAR(25), @DIAUTIL CHAR(3),
			@FERIADO CHAR(3), @TIPOFERIADO VARCHAR(50), @FIMSEMANA CHAR(3), @QUINZENA SMALLINT,
			@MES SMALLINT, @NOMEMES VARCHAR(20), @FIMMES CHAR(3), @TRIMESTRE SMALLINT, 
			@NOMETRIMESTRE VARCHAR(20), @SEMESTRE SMALLINT, @NOMESEMESTRE VARCHAR(20), @ANO SMALLINT
			
			
			SET LANGUAGE BRAZILIAN

		WHILE(@DATA_INICIAL <= @DATAFINAL)
		BEGIN
			SET @DIA = DATEPART(DD,@DATA_INICIAL)
			SET @MES = DATEPART(MM,@DATA_INICIAL)
			
			SET @ANO = DATEPART(YYYY,@DATA_INICIAL)
			
			SET @DIASEMANA = DATENAME(DD,@DATA_INICIAL)
			SET @NOMEMES = DATENAME(MM,@DATA_INICIAL)

			--DIA UTIL E FIM DE SEMANA
			IF (@DIASEMANA <> 'SABADO' OR @DIASEMANA <> 'DOMINGO')
			BEGIN
				SET @DIAUTIL = 'SIM'
				SET @FIMSEMANA = 'NAO'
			END
			ELSE
			BEGIN
				SET @DIAUTIL = 'NAO'
				SET @FIMSEMANA = 'SIM'
			END

			--FERIADO
			--TIPOFERIADO

			--QUINZENA
			IF (@DIA <= 15 )
			BEGIN
				SET @QUINZENA = 1
			END
			ELSE
			BEGIN
				SET @QUINZENA = 2
			END

			--FIM DE MES
			IF(DATEPART(MM,@DATA_INICIAL) <> DATEPART(MM,DATEADD(DAY,1,@DATA_INICIAL)))
			BEGIN
				SET @FIMMES = 'SIM'
			END
			ELSE
			
				SET @FIMMES = 'NAO'
			

			--TRIMESTRE
			SET @TRIMESTRE = 
			(
			SELECT 
			CASE
				WHEN @MES < 4 THEN 1
				WHEN @MES < 7 THEN 2
				WHEN @MES < 10 THEN 3
				WHEN @MES > 9THEN 4
			END
			)
			--NOME TRIMESTRE
			SET @NOMETRIMESTRE = CONCAT(@TRIMESTRE,'º TRIMESTE')
			--SEMESTRE E SEU NOME
			IF(@MES < 7)
			BEGIN
				SET @SEMESTRE = 1
				SET @NOMESEMESTRE = CONCAT(@SEMESTRE,'º SEMESTRE / ',@ANO)
			END
			ELSE
			BEGIN
				SET @SEMESTRE = 2
				SET @NOMESEMESTRE = CONCAT(@SEMESTRE,'º SEMESTRE / ',@ANO)
			END

			DECLARE @EXISTE_DIA BIT,
					@EXISTE_MES BIT,
					@EXISTE_ANO BIT

			EXEC SP_IS_EXISTE @DATA_INICIAL,@DIA,@MES,@ANO,@EXISTE_DIA OUTPUT,@EXISTE_MES OUTPUT, @EXISTE_ANO OUTPUT

			IF(@EXISTE_DIA = 1)
			BEGIN
				INSERT INTO DIM_TEMPO
				(NIVEL, DATA, DIA, DIASEMANA,
				DIAUTIL, FERIADO, TIPOFERIADO,
				FIMSEMANA, QUINZENA, MES,
				NOMEMES, FIMMES, TRIMESTRE, NOMETRIMESTRE,
				SEMESTRE, NOMESEMESTRE, ANO)
				VALUES
				('DIA',@DATA_INICIAL, @DIA, @DIASEMANA, @DIAUTIL,
				@FERIADO, @TIPOFERIADO, @FIMSEMANA, @QUINZENA, 
				@MES, @NOMEMES, @FIMMES, @TRIMESTRE, @NOMETRIMESTRE, 
				@SEMESTRE, @NOMESEMESTRE, @ANO)
			END

			IF(@EXISTE_DIA = 1)
			BEGIN
				INSERT INTO DIM_TEMPO
				(NIVEL, DATA, DIA, DIASEMANA,
				DIAUTIL, FERIADO, TIPOFERIADO,
				FIMSEMANA, QUINZENA, MES,
				NOMEMES, FIMMES, TRIMESTRE, NOMETRIMESTRE,
				SEMESTRE, NOMESEMESTRE, ANO)
				VALUES
				('DIA',@DATA_INICIAL, @DIA, @DIASEMANA, @DIAUTIL,
				@FERIADO, @TIPOFERIADO, @FIMSEMANA, @QUINZENA, 
				@MES, @NOMEMES, @FIMMES, @TRIMESTRE, @NOMETRIMESTRE, 
				@SEMESTRE, @NOMESEMESTRE, @ANO)
			END

			IF(@EXISTE_MES = 1)
			BEGIN
				INSERT INTO DIM_TEMPO
				(NIVEL,MES,NOMEMES, FIMMES, TRIMESTRE, 
				NOMETRIMESTRE,SEMESTRE, NOMESEMESTRE, ANO)
				VALUES
				('MES', @MES, @NOMEMES, @FIMMES, @TRIMESTRE, 
				@NOMETRIMESTRE, @SEMESTRE, @NOMESEMESTRE, @ANO)
			END

			IF(@EXISTE_ANO = 1)
			BEGIN
				INSERT INTO DIM_TEMPO
				(NIVEL, ANO)
				VALUES
				('ANO', @ANO)
			END

			SET @DATA_INICIAL = DATEADD(DAY,1,@DATA_INICIAL)

		END--FIM DO WHILE
END--FIM DO PROCEDIMENTO


DROP PROCEDURE SP_IS_EXISTE
CREATE PROCEDURE SP_IS_EXISTE
( @DATA DATETIME,@DIA INT, @MES INT, @ANO INT, @EXISTE_DIA BIT OUTPUT,@EXISTE_MES BIT OUTPUT,@EXISTE_ANO BIT OUTPUT) AS
BEGIN		

SET @EXISTE_ANO = 0
SET @EXISTE_DIA = 0
SET @EXISTE_MES = 0
			IF  ((SELECT ANO FROM DIM_TEMPO WHERE NIVEL= 'DIA' AND DATA = @DATA) IS NULL)
				BEGIN
					SET @EXISTE_DIA = 1
				END
			IF ((SELECT ANO FROM DIM_TEMPO WHERE NIVEL= 'MES' AND MES = @MES AND ANO = @ANO) IS NULL)
				BEGIN
					SET @EXISTE_MES = 1
				END
			IF ((SELECT ANO FROM DIM_TEMPO WHERE NIVEL= 'ANO' AND  ANO = @ANO) IS NULL)
				BEGIN
					SET @EXISTE_ANO = 1
				END
END

CREATE TABLE DIM_Feriados(
Id_Feriado int IDENTITY(1,1) NOT NULL,
Data datetime NOT NULL,
Descricao varchar(200) NOT NULL,
Tipo varchar(50) NOT NULL CHECK (Tipo in ('NACIONAL','ESTADUAL','MUNICIPAL')),
PRIMARY KEY (Id_Feriado)
)