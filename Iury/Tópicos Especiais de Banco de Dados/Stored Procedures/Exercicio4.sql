CREATE TABLE TB_CLIENTE
(
	MATRICULA INT NOT NULL,
	NOME VARCHAR(40) NOT NULL,
	TELEFONE VARCHAR(40) NOT NULL
)

ALTER TABLE TB_CLIENTE ADD CONSTRAINT PK_TB_CLIENTE 
PRIMARY KEY (MATRICULA)


--Criacao de Stored Procedure utilizando parametros

CREATE PROCEDURE SP_INCLUI_CLIENTE (@MATRICULA INT, @NOME VARCHAR(40), @TELEFONE VARCHAR(40),
									 @MENSAGEM VARCHAR(40) OUTPUT) AS
INSERT INTO TB_CLIENTE 
VALUES (@MATRICULA, @NOME, @TELEFONE)
SET @MENSAGEM = 'Cliente inserido com sucesso'

--Executando o procedimento. Necessário declara uma variável para receber a saida
DECLARE @MENSAGEM VARCHAR(40)
EXEC SP_INCLUI_CLIENTE 003, 'Jóse', '52368745', @MENSAGEM OUTPUT
PRINT @MENSAGEM

SELECT * FROM TB_CLIENTE


CREATE PROCEDURE SP_REMOVE_CLIENTE(@MATRICULA INT, @MENSAGEM VARCHAR(40) OUTPUT) AS
DELETE TB_CLIENTE WHERE TB_CLIENTE.MATRICULA = @MATRICULA
SET @MENSAGEM = 'REMOVIDO'

DECLARE @MENSAGEM VARCHAR(40)
EXEC SP_REMOVE_CLIENTE 002, @MENSAGEM OUTPUT
PRINT @MENSAGEM

CREATE PROCEDURE SP_ALTERA_CLIENTE (@MATRICULA INT, @NOME VARCHAR(40), @TELEFONE VARCHAR(40)) AS
UPDATE TB_CLIENTE SET NOME = @NOME, TELEFONE = @TELEFONE WHERE MATRICULA = @MATRICULA 

EXEC SP_ALTERA_CLIENTE 003, 'Zé', '123456789'

ALTER PROCEDURE SP_ALTERA_CLIENTE (@MATRICULA INT, @NOME VARCHAR(40), @TELEFONE VARCHAR(40), @MENSAGEM VARCHAR(100) OUTPUT) AS
IF (@MATRICULA IS NULL)
BEGIN
	SET @MENSAGEM = 'Campo de matricula informado foi Nulo. Falha ao realizar procedimento. Insira uma chave válida'
END
ELSE
BEGIN
	UPDATE TB_CLIENTE SET NOME = @NOME, TELEFONE = @TELEFONE WHERE MATRICULA = @MATRICULA 
END
	
DECLARE @MENSAGEM VARCHAR(100)														
EXEC SP_ALTERA_CLIENTE 003, 'Carlos', '123456789', @MENSAGEM OUTPUT
PRINT @MENSAGEM
